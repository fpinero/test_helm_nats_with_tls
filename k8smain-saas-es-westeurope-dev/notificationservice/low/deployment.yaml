apiVersion: apps/v1
kind: Deployment
metadata:
  name: saas-platform-notificationservice
  labels:
    app: saas-platform-notificationservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: saas-platform-notificationservice
  template:
    metadata:
      labels:
        app: saas-platform-notificationservice
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: saas-platform-notificationservice
                topologyKey: "kubernetes.io/hostname"              
      containers:
          - name: saas-platform-notificationservice
            image: acrsaaseswesteuropedev.azurecr.io/saas-platform-notificationservice:0.0.2
            readinessProbe:
              httpGet:
            #    path: /health/ready just as a work around
                path: /health/live
                port: 80
              initialDelaySeconds: 5
              periodSeconds: 10
            livenessProbe:
              httpGet:
                path: /health/live
                port: 80
              initialDelaySeconds: 15
              periodSeconds: 20
            env:
              - name: ASPNETCORE_URLS
                value: "http://+:80"
              - name: ASPNETCORE_ENVIRONMENT
                value: "Development"  
              - name: ASPNETCORE_Kestrel__Certificates__Default__Password
                value: "a8a6174c-f020-4e8f-8aea-45e828ce87f6" 
              - name: ASPNETCORE_Kestrel__Certificates__Default__Path
                value: "/https/Bizerba.SaaS.NotificationService.pfx"
            ports:
              - name: http
                containerPort: 80
            volumeMounts:
              - name: config
                mountPath: /app/Configuration
              - name: certificate
                mountPath: /https
            resources: {}      
      volumes:
      - name: config
        configMap:
          name: configurations-configmap 
      - name: certificate
        configMap:
          name: certificate-configmap          
      restartPolicy: Always